#ifndef MEMORY_H
#define MEMORY_H

#define FIND_ROWS_METHOD_MAPPING (0)
#define FIND_ROWS_METHOD_TIMING  (1)

#define FIND_ROWS_METHOD FIND_ROWS_METHOD_MAPPING

#include "globals.h"
#include <cstdint>
#include <vector>


struct sort_rows_predicate {
  inline bool operator() (const uint8_t *row1, const uint8_t *row2) {
    return (*((int*) row1) < *((int*) row2));
  }
};

struct ContigMemArea {
  std::vector<std::vector<uint8_t*>> rows_vector;
};


int get_rows_vector(std::vector<std::vector<uint8_t*>> &rows_vector,
                    volatile uint8_t *mem, size_t mem_size, int limit);

void *aligned_mmap(size_t alignment, size_t length, int prot, int flags,
                  int fd, off_t offset);

volatile uint8_t *get_aligned_uncached_mem(size_t mem_size);

#endif // MEMORY_H